{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAiCA,SAASC,EAAcC,EAAUC,GACTC,KAAKC,SAAW,GAGpCC,QAAQC,QAAQ,CAAEC,SAAAN,EAAUO,MAAAN,IAASO,MAAK,EAACF,SAAEA,EAAQC,MAAEA,MACrDE,EAAAZ,GAASa,OAAOC,QACd,uBAAqBL,QAAiBC,MAAW,CAC/CK,QAAS,MAEbC,QAAQC,IAAI,uBAAqBR,QAAiBC,MAAU,IAG9DH,QAAQW,OAAO,CAAET,SAAAN,EAAUO,MAAAN,IAASe,OAAM,EAACV,SAAEA,EAAQC,MAAEA,MACrDE,EAAAZ,GAASa,OAAOO,QAAQ,sBAAoBX,QAAiBC,MAAW,CACpEK,QAAO,MAEXC,QAAQC,IAAI,sBAAoBR,QAAeC,MAAU,G,EA/ClD,CACXW,OAAQC,SAASC,cAAc,WAG5BF,OAAOG,iBAAiB,UAC7B,SAAsBC,GACpBA,EAAIC,iBACJ,IAAIC,EAAK,EACT,MACEC,UAAUlB,MAAEA,EAAKmB,KAAEA,EAAIC,OAAEA,IACvBL,EAAIM,cAERC,YAAW,KACT,MAAMC,EAAYC,OAAOL,EAAKM,OAC9B,IAAIC,EAAcH,EAElB/B,EAAcyB,EAAIS,GAElB,MAAMC,EAAQC,aAAY,KACpBX,EAAKO,OAAOJ,EAAOK,QACrBR,GAAM,EACNS,GAAeH,EACf/B,EAAcyB,EAAIS,IAElBG,cAAcF,EAAM,GAGrBR,EAAKM,MAAM,GACbzB,EAAMyB,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  formEl: document.querySelector('.form'),\n};\n\nrefs.formEl.addEventListener('submit', onFormSubmit);\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  let id = 1;\n  const {\n    elements: { delay, step, amount },\n  } = evt.currentTarget;\n\n  setTimeout(() => {\n    const stepDelay = Number(step.value);\n    let stepPromise = stepDelay;\n\n    createPromise(id, stepPromise);\n\n    const intId = setInterval(() => {\n      if (id < Number(amount.value)) {\n        id += 1;\n        stepPromise += stepDelay;\n        createPromise(id, stepPromise);\n      } else {\n        clearInterval(intId);\n        // refs.formEl.reset();\n      }\n    }, step.value);\n  }, delay.value);\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  if (shouldResolve) {\n    Promise.resolve({ position, delay }).then(({ position, delay }) => {\n      Notiflix.Notify.success(\n        `✅ Fulfilled promise ${position} in ${delay}ms`,\n        { timeout: 4000 }\n      );\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    });\n  } else {\n    Promise.reject({ position, delay }).catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n        timeout: 4000,\n      });\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n  }\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position1","delay1","Math","random","Promise","resolve","position","delay","then","$parcel$interopDefault","Notify","success","timeout","console","log","reject","catch","failure","formEl","document","querySelector","addEventListener","evt","preventDefault","id","elements","step","amount","currentTarget","setTimeout","stepDelay","Number","value","stepPromise","intId","setInterval","clearInterval"],"version":3,"file":"03-promises.3853401c.js.map"}