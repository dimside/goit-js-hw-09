{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAiCA,SAASC,EAAcC,EAAUC,GACTC,KAAKC,SAAW,GAGpCC,QAAQC,QAAQ,CAAEL,WAAUC,UAASK,MAAK,SAAAC,G,IAAGC,EAAQD,EAARP,SAAUS,EAAKF,EAALN,MACrDS,EAAAb,GAASc,OAAOC,QACd,uBAAwCC,OAAfL,EAAS,QAAYK,OAANJ,EAAM,MAC5C,CAAAK,QAAS,MAEbC,QAAQC,IAAI,uBAAwCH,OAAfL,EAAS,QAAYK,OAANJ,EAAM,M,IAG5DL,QAAQa,OAAO,CAAEjB,WAAUC,UAASiB,OAAM,SAAAX,G,IAAGC,EAAQD,EAARP,SAAUS,EAAKF,EAALN,MACrDS,EAAAb,GAASc,OAAOQ,QAAQ,sBAAuCN,OAAfL,EAAS,QAAYK,OAANJ,EAAM,MAAK,CACtEK,QAAO,MAEXC,QAAQC,IAAI,sBAAqCH,OAAfL,EAAS,QAAYK,OAANJ,EAAM,M,KA/ChD,CACXW,OAAQC,SAASC,cAAc,WAG5BF,OAAOG,iBAAiB,UAC7B,SAAsBC,GACpBA,EAAIC,iBACJ,IAAIC,EAAK,EAGYC,EAAjBH,EAAII,cADNC,SAAY5B,EAAK0B,EAAL1B,MAAO6B,EAAIH,EAAJG,KAAMC,EAAMJ,EAANI,OAG3BC,YAAW,WACT,IAAMC,EAAYC,OAAOJ,EAAKK,OAC1BC,EAAcH,EAElBlC,EAAc2B,EAAIU,GAElB,IAAMC,EAAQC,aAAY,WACpBZ,EAAKQ,OAAOH,EAAOI,OAGrBpC,EAFA2B,GAAM,EACNU,GAAeH,GAGfM,cAAcF,E,GAGfP,EAAKK,M,GACPlC,EAAMkC,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  formEl: document.querySelector('.form'),\n};\n\nrefs.formEl.addEventListener('submit', onFormSubmit);\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  let id = 1;\n  const {\n    elements: { delay, step, amount },\n  } = evt.currentTarget;\n\n  setTimeout(() => {\n    const stepDelay = Number(step.value);\n    let stepPromise = stepDelay;\n\n    createPromise(id, stepPromise);\n\n    const intId = setInterval(() => {\n      if (id < Number(amount.value)) {\n        id += 1;\n        stepPromise += stepDelay;\n        createPromise(id, stepPromise);\n      } else {\n        clearInterval(intId);\n        // refs.formEl.reset();\n      }\n    }, step.value);\n  }, delay.value);\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  if (shouldResolve) {\n    Promise.resolve({ position, delay }).then(({ position, delay }) => {\n      Notiflix.Notify.success(\n        `✅ Fulfilled promise ${position} in ${delay}ms`,\n        { timeout: 4000 }\n      );\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    });\n  } else {\n    Promise.reject({ position, delay }).catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n        timeout: 4000,\n      });\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n  }\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Math","random","Promise","resolve","then","param","_$position","_$delay","$parcel$interopDefault","Notify","success","concat","timeout","console","log","reject","catch","failure","formEl","document","querySelector","addEventListener","evt","preventDefault","id","_elements","currentTarget","elements","step","amount","setTimeout","stepDelay","Number","value","stepPromise","intId","setInterval","clearInterval"],"version":3,"file":"03-promises.1d5a4d11.js.map"}